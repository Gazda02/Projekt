@page "{id:int}"
@model EditServiceOrderModel
@{
    ViewData["Title"] = "Edit Service Order";
}
<h2>Edit Service Order</h2>
<form method="post">
    <input type="hidden" asp-for="ServiceOrder.Id" />
    <div class="mb-3">
        <label asp-for="ServiceOrder.VehicleId" class="form-label"></label>
        <select asp-for="ServiceOrder.VehicleId" asp-items="Model.VehicleList" class="form-select"></select>
        <span asp-validation-for="ServiceOrder.VehicleId" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="ServiceOrder.Status" class="form-label"></label>
        <select asp-for="ServiceOrder.Status" class="form-select">
            @foreach (var status in Enum.GetValues(typeof(OrderStatus)))
            {
                <option value="@status" selected="@(Model.ServiceOrder.Status == (OrderStatus)status)">@status</option>
            }
        </select>
        <span asp-validation-for="ServiceOrder.Status" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="ServiceOrder.Description" class="form-label"></label>
        <textarea asp-for="ServiceOrder.Description" class="form-control"></textarea>
        <span asp-validation-for="ServiceOrder.Description" class="text-danger"></span>
    </div>
    <h4>Tasks</h4>
    <div id="tasks-list">
        @for (int i = 0; i < Model.Tasks.Count; i++)
        {
            <div class="mb-2 border rounded p-2">
                <input type="hidden" asp-for="Tasks[@i].Id" />
                <label asp-for="Tasks[@i].Description" class="form-label"></label>
                <input asp-for="Tasks[@i].Description" class="form-control" />
                <span asp-validation-for="Tasks[@i].Description" class="text-danger"></span>
            </div>
        }
    </div>
    <button type="button" class="btn btn-outline-primary mb-3" id="add-task-btn">+ Add Task</button>

    <h4>Comments</h4>
    <form method="post" asp-page-handler="AddComment">
        <div class="mb-3">
            <label for="newComment" class="form-label">Add Comment</label>
            <textarea name="NewComment" id="newComment" class="form-control"></textarea>
        </div>
        <button type="submit" class="btn btn-info">Add Comment</button>
    </form>
    @if (Model.Comments != null && Model.Comments.Any())
    {
        <ul class="list-group mt-3">
            @foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt))
            {
                <li class="list-group-item">
                    <div><b>@comment.AuthorId</b> <span class="text-muted">@comment.CreatedAt.ToString("g")</span></div>
                    <div>@comment.Content</div>
                </li>
            }
        </ul>
    }

    <button type="submit" class="btn btn-success mt-3">Save</button>
    <a asp-page="Index" class="btn btn-secondary ms-2 mt-3">Cancel</a>
</form>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.getElementById('add-task-btn').addEventListener('click', function () {
            var tasksList = document.getElementById('tasks-list');
            var idx = tasksList.children.length;
            var div = document.createElement('div');
            div.className = 'mb-2 border rounded p-2';
            div.innerHTML = `
                <input type="hidden" name="Tasks[${idx}].Id" value="0" />
                <label class="form-label" for="Tasks_${idx}__Description">Description</label>
                <input class="form-control" type="text" name="Tasks[${idx}].Description" id="Tasks_${idx}__Description" />
            `;
            tasksList.appendChild(div);
        });
    </script>
} 